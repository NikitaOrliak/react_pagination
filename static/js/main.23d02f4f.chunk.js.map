{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["checkCurrentPage","page","toCheckValue","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","pagesArr","items","itemsArr","i","push","length","className","cn","disabled","onClick","href","map","active","item","from","to","numbers","n","getNumbers","App","useState","setPerPage","setCurrentPage","startItemsPerPage","Number","endItemsPerPage","value","onChange","event","target","id","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23d02f4f.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ninterface Params {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nfunction checkCurrentPage(page: number, toCheckValue: number): boolean {\n  return page === toCheckValue;\n}\n\nexport const Pagination: React.FC<Params> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = Math.ceil(total / perPage);\n  const pagesArr: number[] = [];\n  let items: number[] = [];\n  const itemsArr: Array<number[]> = [];\n\n  for (let i = 1; i <= pages; i += 1) {\n    pagesArr.push(i);\n  }\n\n  for (let i = 1; i <= total; i += 1) {\n    items.push(i);\n\n    if (items.length === perPage) {\n      itemsArr.push(items);\n      items = [];\n    }\n  }\n\n  if (items.length !== 0) {\n    itemsArr.push(items);\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', {\n          disabled: checkCurrentPage(currentPage, 1),\n        })}\n        >\n          <a\n            onClick={() => {\n              if (!checkCurrentPage(currentPage, 1)) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            // aria-disabled=\"true\"\n            aria-disabled={\n              checkCurrentPage(currentPage, 1) ? 'true' : 'false'\n            }\n          >\n            «\n          </a>\n        </li>\n        {\n          pagesArr.map(page => (\n            <li\n              className={cn('page-item', {\n                active: page === currentPage, //!\n              })}\n            >\n              <a\n                onClick={() => onPageChange(page)}\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n              >\n                {page}\n              </a>\n            </li>\n          ))\n        }\n        <li className={cn('page-item', {\n          disabled: checkCurrentPage(currentPage, pages),\n        })}\n        >\n          <a\n            onClick={() => {\n              if (!checkCurrentPage(currentPage, pages)) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            // aria-disabled=\"false\"\n            aria-disabled={\n              checkCurrentPage(currentPage, pages) ? 'true' : 'false'\n            }\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {\n          itemsArr[currentPage - 1].map(item => (\n            <li data-cy=\"item\">{`Item ${item}`}</li>\n          ))\n        }\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState('5');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const startItemsPerPage = items.length\n    - (items.length - (Number(perPage) * (currentPage - 1))) + 1;\n\n  const endItemsPerPage = startItemsPerPage + Number(perPage) - 1 > items.length\n    ? items.length\n    : startItemsPerPage + Number(perPage) - 1;\n\n  function changeCurrentPage(value: number) {\n    setCurrentPage(value);\n  }\n\n  function changePerPage(value: string) {\n    setPerPage(value);\n    setCurrentPage(1);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {\n          `Page ${currentPage} (items ${startItemsPerPage} - ${endItemsPerPage} of ${items.length})`\n        }\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={perPage}\n            onChange={event => changePerPage(event.target.value)}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={Number(perPage)}\n        currentPage={currentPage}\n        // eslint-disable-next-line react/jsx-no-bind\n        onPageChange={changeCurrentPage}\n      />\n\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}