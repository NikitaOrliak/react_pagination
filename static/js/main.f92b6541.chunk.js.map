{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","checkCurrentPage","page","toCheckValue","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","pagesArr","className","cn","disabled","onClick","href","map","active","items","App","useState","setPerPage","setCurrentPage","length","Number","itemsArr","i","startItemsPerPage","endItemsPerPage","value","onChange","event","target","id","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f92b6541.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Params {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nfunction checkCurrentPage(page: number, toCheckValue: number): boolean {\n  return page === toCheckValue;\n}\n\nexport const Pagination: React.FC<Params> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = Math.ceil(total / perPage);\n\n  const pagesArr = getNumbers(1, pages);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', {\n          disabled: checkCurrentPage(currentPage, 1),\n        })}\n        >\n          <a\n            onClick={() => onPageChange(currentPage - 1)}\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={\n              checkCurrentPage(currentPage, 1) ? 'true' : 'false'\n            }\n          >\n            «\n          </a>\n        </li>\n        {\n          pagesArr.map(page => (\n            <li\n              className={cn('page-item', {\n                active: page === currentPage,\n              })}\n            >\n              <a\n                onClick={() => onPageChange(page)}\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n              >\n                {page}\n              </a>\n            </li>\n          ))\n        }\n        <li className={cn('page-item', {\n          disabled: checkCurrentPage(currentPage, pages),\n        })}\n        >\n          <a\n            onClick={() => onPageChange(currentPage + 1)}\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={\n              checkCurrentPage(currentPage, pages) ? 'true' : 'false'\n            }\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState('5');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const pages = Math.ceil(items.length / Number(perPage));\n  const itemsArr: Array<number[]> = [];\n\n  for (let i = 1; i <= items.length; i += Number(perPage)) {\n    if (i + Number(perPage) > items.length) {\n      itemsArr.push(getNumbers(i, items.length));\n    } else {\n      itemsArr.push(getNumbers(i, i + Number(perPage) - 1));\n    }\n  }\n\n  const startItemsPerPage = items.length\n    - (items.length - (Number(perPage) * (currentPage - 1))) + 1;\n\n  const endItemsPerPage = startItemsPerPage + Number(perPage) - 1 > items.length\n    ? items.length\n    : startItemsPerPage + Number(perPage) - 1;\n\n  function changeCurrentPage(value: number) {\n    if (value > pages) {\n      setCurrentPage(pages);\n    } else if (value < 1) {\n      setCurrentPage(1);\n    } else {\n      setCurrentPage(value);\n    }\n  }\n\n  function changePerPage(value: string) {\n    setPerPage(value);\n    setCurrentPage(1);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {\n          `Page ${currentPage} (items ${startItemsPerPage} - ${endItemsPerPage} of ${items.length})`\n        }\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={perPage}\n            onChange={event => changePerPage(event.target.value)}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={Number(perPage)}\n        currentPage={currentPage}\n        // eslint-disable-next-line react/jsx-no-bind\n        onPageChange={changeCurrentPage}\n      />\n\n      <ul>\n        {\n          itemsArr[currentPage - 1].map(item => (\n            <li data-cy=\"item\">{`Item ${item}`}</li>\n          ))\n        }\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}